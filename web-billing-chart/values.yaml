# helm upgrade --install sys-service-provisioning ../web-service-billing/web-billing-chart/ -n web-billing --create-namespace  -f web-service-billing/values.yaml
# Default values for web-order-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: onekonsole/web-service-billing
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []
nameOverride: "web-billing"
fullnameOverride: "web-billing-service"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8030

ingress:
  enabled: true
  className: nginx
  labels: 
    ingress-target-updater: "true"
  annotations: 
    external-dns.alpha.kubernetes.io/target: 127.0.0.1
    nginx.ingress.kubernetes.io/auth-url: http://authentification-service.auth.svc.cluster.local/verify?code=200
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: billing.onekonsole.emetral.fr
      paths:
        - path: /
          pathType: Prefix
  tls: []

  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

env:
  secretName: web-billing-configuration
  CLIENT_ID: paypal_client_id
  CLIENT_SECRET: paypal_client_secret
  WEB_ORDER_URL: web_order_service_url

  
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
